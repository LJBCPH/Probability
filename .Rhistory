i=1;j=1;sum=0;r=20;
dldb <- function(beta,theta,x){
sum=0;
for(i in 1:dim(x)[1]){
for(j in (i+1):(dim(x)[2])) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
beta = c(1.6758,0.0269404)
theta = 1.59384
dx2x <- deriv(~ x^2, "x") ;
x <- cbind(c(0.23,4),c(0.67,29),c(0.51,7))
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
#Opskriver log-likelihoodfunktion
i=1;j=1;sum=0;r=20;
logl <- function(beta,theta,x){
sum=0;
for (i in 1:(dim(x)[2]-1)){
for (j in (i+1):(dim(x)[2])){
sum = sum +Y[i,j]*(t(x[,i])%*%beta-log(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))+
Y[j,i]*(t(x[,j])%*%beta-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))+
(r-Y[i,j]-Y[j,i])*(log(theta^2-1)+t(x[,i])%*%beta+t(x[,j])%*%beta-log(exp(t(x[,i])%*%beta)+
theta*exp(t(x[,j])%*%beta))-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
}
}
return(sum)
}
logl(beta,theta,x)
i=1;j=1;sum=0;r=20;
dldb <- function(beta,theta,x){
sum=0;
for(i in 1:dim(x)[1]){
for(j in (i+1):(dim(x)[2])) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
dldb(beta,theta,x)#-7.809544e-06 -4.273634e-04
i=1;j=1;sum=0;r=20;
dldb <- function(beta,theta,x){
sum=0;
for(i in 1:dim(x)[1]){
for(j in (i+1):(dim(x)[2])) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
dldb(beta,theta,x)
#Danner loglikelihood funktionen
#testværdier
beta = c(1.6758,0.0269404)
theta = 1.59384
dldb <- function(beta,theta,x){
sum=0;
for(i in 1:dim(x)[1]){
for(j in (i+1):(dim(x)[2])) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
dldb(beta,theta,x)#-7.809544e-06 -4.273634e-04
#Danner loglikelihood funktionen
#testværdier
beta = c(1.6758,0.0269404)
theta = 1.59384
dx2x <- deriv(~ x^2, "x") ;
x <- cbind(c(0.23,4),c(0.67,29),c(0.51,7))
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
dldb <- function(beta,theta,x){
sum=0;
for(i in 1:dim(x)[1]){
for(j in (i+1):(dim(x)[2])) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
dldb(beta,theta,x)#-7.809544e-06 -4.273634e-04
#git add Probabilities.R #git commit -m "Navn på ændring" #git push #git pull
rm(list=ls())
library(matlib)
#Danner loglikelihood funktionen
#testværdier
beta = c(1.6758,0.0269404)
theta = 1.59384
dx2x <- deriv(~ x^2, "x") ;
x <- cbind(c(0.23,4),c(0.67,29),c(0.51,7))
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
#Opskriver log-likelihoodfunktion
i=1;j=1;sum=0;r=20;
logl <- function(beta,theta,x){
sum=0;
for (i in 1:(dim(x)[2]-1)){
for (j in (i+1):(dim(x)[2])){
sum = sum +Y[i,j]*(t(x[,i])%*%beta-log(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))+
Y[j,i]*(t(x[,j])%*%beta-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))+
(r-Y[i,j]-Y[j,i])*(log(theta^2-1)+t(x[,i])%*%beta+t(x[,j])%*%beta-log(exp(t(x[,i])%*%beta)+
theta*exp(t(x[,j])%*%beta))-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
}
}
return(sum)
}
logl(beta,theta,x)
i=1;j=1;sum=0;r=20;
dldb <- function(beta,theta,x){
db=0;
for(i in 1:dim(x)[1]){
for(j in (i+1):(dim(x)[2])) {
db = db+ ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(db)
}
dldb(beta,theta,x)#-7.809544e-06 -4.273634e-04
db <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[2]-1){
for(j in (i+1):(dim(x)[2])) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
i=1;j=1;sum=0;r=20;
dtheta(beta,theta,x) <- function(beta,theta,x) {
sum=0;
for(i in 1:dim(x)[2]-1) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta+exp(t(x[,j])%*%beta)))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta+theta*exp(t(x[,j])%*%beta)))))
}
}
return(sum)
}
db <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[1]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
db(beta,theta,x)#-7.809544e-06 -4.273634e-04
logl(beta,theta,x)
db(beta,theta,x)#-7.809544e-06 -4.273634e-04
db <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[2]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
db(beta,theta,x)#-7.809544e-06 -4.273634e-04
i=1;j=1;sum=0;r=20;
dtheta(beta,theta,x) <- function(beta,theta,x) {
sum=0;
for(i in 1:dim(x)[2]-1) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta+exp(t(x[,j])%*%beta)))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta+theta*exp(t(x[,j])%*%beta)))))
}
}
return(sum)
}
dtheta <- function(beta,theta,x) {
sum=0;
for(i in 1:dim(x)[2]-1) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta+exp(t(x[,j])%*%beta)))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta+theta*exp(t(x[,j])%*%beta)))))
}
}
return(sum)
}
dtheta(beta,theta,x)
dtheta(beta,theta,x)
(exp(t(x[,1])%*%beta)
exp(t(x[,1])%*%beta
exp(t(x[,1])%*%beta
exp(t(x[,1])%*%beta)
t(x[,1])
beta
t(x[,1])%*%beta
exp(t(x[,1])%*%beta)
exp(t(x[,1])%*%beta)
dtheta <- function(beta,theta,x) {
sum=0;
for(i in 1:dim(x)[2]-1) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta+exp(t(x[,j])%*%beta)))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta+theta*exp(t(x[,j])%*%beta)))))
}
}
return(sum)
}
dtheta(beta,theta,x)
i=1;j=1;sum=0;r=20;
dtheta <- function(beta,theta,x) {
sum=0;
for(i in 1:dim(x)[2]-1) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))))
}
}
return(sum)
}
dtheta(beta,theta,x)
theta*exp(t(x[,i])%*%beta+exp(t(x[,j])%*%beta)
(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))
(theta*exp(t(x[,1])%*%beta)+exp(t(x[,2])%*%beta))
(theta*exp(t(x[,1])%*%beta)+exp(t(x[,2])%*%beta))
exp(t(x[,1])%*%beta)
(t(x[,1])%*%beta)
exp(t(x[,1])%*%beta)
exp(t(x[,1])%*%beta)+exp(t(x[,2])%*%beta)
i=1;j=1;sum=0;r=20;
dtheta <- function(beta,theta,x) {
sum=0;
for(i in 1:dim(x)[2]-1) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))))
}
}
return(sum)
}
dtheta(beta,theta,x)
theta*exp(t(x[,1])%*%beta)+exp(t(x[,2])%*%beta)
(theta*exp(t(x[,1])%*%beta)+exp(t(x[,2])%*%beta))
i=1;j=1;sum=0;r=20;
dtheta <- function(beta,theta,x) {
sum=0;
for(i in 1:(dim(x)[2]-1)) {
for(j in (i+1):dim(x)[2]) {
sum = sum + (r-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))))
+ (r-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))))
}
}
return(sum)
}
dtheta(beta,theta,x)
beta
theta
dtheta(beta,theta+1,x)
dtheta(beta,theta+2,x)
dtheta(beta,theta+10000,x)
dtheta(beta,theta+-0.5,x)
dtheta(beta,theta+10,x)
dtheta(beta,theta+10.5,x)
dtheta(beta,theta,x)
dtheta(beta,theta+0.1,x)
dtheta(beta,theta+0.01,x)
dtheta(beta,theta,x)
beta
db <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[2]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
db(beta,theta,x)#-7.809544e-06 -4.273634e-04
db(beta,theta,x)#-7.809544e-06 -4.273634e-04
i=1;j=1;sum=0;r=20;
#Definerer dldb til at være første afledte ift. beta
db <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[2]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + ((r-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+(r-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
}
db(beta,theta,x)#-7.809544e-06 -4.273634e-04
#Danner loglikelihood funktionen
#testværdier
beta = c(1.6758,0.0269404)
theta = 1.59384
dx2x <- deriv(~ x^2, "x") ;
x <- cbind(c(0.23,4),c(0.67,29),c(0.51,7))
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
#Opskriver log-likelihoodfunktion
i=1;j=1;sum=0;r=20;
logl <- function(beta,theta,x){
sum=0;
for (i in 1:(dim(x)[2]-1)){
for (j in (i+1):(dim(x)[2])){
sum = sum +Y[i,j]*(t(x[,i])%*%beta-log(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))+
Y[j,i]*(t(x[,j])%*%beta-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))+
(r-Y[i,j]-Y[j,i])*(log(theta^2-1)+t(x[,i])%*%beta+t(x[,j])%*%beta-log(exp(t(x[,i])%*%beta)+
theta*exp(t(x[,j])%*%beta))-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
}
}
return(sum)
}
logl(beta,theta,x)
library(matlib)
#git add Probabilities.R #git commit -m "Navn på ændring" #git push #git pull
rm(list=ls())
library(matlib)
#Danner loglikelihood funktionen
#testværdier
beta = c(1.6758,0.0269404)
theta = 1.59384
dx2x <- deriv(~ x^2, "x") ;
x <- cbind(c(0.23,4),c(0.67,29),c(0.51,7))
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
#Opskriver log-likelihoodfunktion
i=1;j=1;sum=0;r=20;
logl <- function(beta,theta,x){
sum=0;
for (i in 1:(dim(x)[2]-1)){
for (j in (i+1):(dim(x)[2])){
sum = sum +Y[i,j]*(t(x[,i])%*%beta-log(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))+
Y[j,i]*(t(x[,j])%*%beta-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))+
(r-Y[i,j]-Y[j,i])*(log(theta^2-1)+t(x[,i])%*%beta+t(x[,j])%*%beta-log(exp(t(x[,i])%*%beta)+
theta*exp(t(x[,j])%*%beta))-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
}
}
return(sum)
}
logl(beta,theta,x)
i=1;j=1;sum=0;r=20;
logl <- function(beta,theta,x){
sum=0;
for (i in 1:(dim(x)[2]-1)){
for (j in (i+1):(dim(x)[2])){
sum = sum +Y[i,j]*(t(x[,i])%*%beta-log(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))+
Y[j,i]*(t(x[,j])%*%beta-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))+
(r-Y[i,j]-Y[j,i])*(log(theta^2-1)+t(x[,i])%*%beta+t(x[,j])%*%beta-log(exp(t(x[,i])%*%beta)+
theta*exp(t(x[,j])%*%beta))-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
}
}
return(sum)
}
logl(beta,theta,x)
Y
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
Y
beta = c(1.6758,0.0269404)
theta = 1.59384
dx2x <- deriv(~ x^2, "x") ;
x <- cbind(c(0.23,4),c(0.67,29),c(0.51,7))
Y <- cbind(c(0,13,12),c(3,0,3),c(5,13,0))
#Opskriver log-likelihoodfunktion
beta
#Danner loglikelihood funktionen
#testværdier
beta = c(1.6758,0.0269404)
beta
