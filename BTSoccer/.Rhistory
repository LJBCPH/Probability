UnikSammenligner <- unique(data2$HU)
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
hjemmesejre
udesejre
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre
udesejre$HU <- paste(udesejre$H2,udesejre$H1);udesejre <- udesejre[,4:3];udesejre <- udesejre[order(udesejre$HU),]
udesejre
HUsejre <- c(hjemmesejre$x+udesejre$x)
HUsejre
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
HUsejre <- c(hjemmesejre$x+udesejre$x)
HUsejre
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
HUsejre <- c(hjemmesejre$x+udesejre$x)
HUsejre
samlet <- cbind.data.frame(hjemmesejre$HU,HUsejre)
samlet
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
hjemmesejre
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
udesejre
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre$HU <- paste(udesejre$H2,udesejre$H1)
udesejre
udesejre <- udesejre[,4:3]
udesejre
HUsejre <- c(hjemmesejre$x+udesejre$x)
samlet <- cbind.data.frame(hjemmesejre$HU,HUsejre)
samlet
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre$HU <- paste(udesejre$H1,udesejre$H2);udesejre <- udesejre[,4:3]
HUsejre <- c(hjemmesejre$x+udesejre$x)
samlet <- cbind.data.frame(hjemmesejre$HU,HUsejre)
samlet
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre$HU <- paste(udesejre$H2,udesejre$H1);udesejre <- udesejre[,4:3];udesejre <- udesejre[order(udesejre$HU),]
HUsejre <- c(hjemmesejre$x+udesejre$x)
samlet <- cbind.data.frame(hjemmesejre$HU,HUsejre)
samlet
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre$HU <- paste(udesejre$H2,udesejre$H1);udesejre <- udesejre[,4:3]
HUsejre <- c(hjemmesejre$x+udesejre$x)
samlet <- cbind.data.frame(hjemmesejre$HU,HUsejre)
samlet
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H2","H1"),sep=" ")
udesejre$HU <- paste(udesejre$H2,udesejre$H1);udesejre <- udesejre[,4:3];#udesejre <- udesejre[order(udesejre$HU),]
HUsejre <- c(hjemmesejre$x+udesejre$x)
samlet <- cbind.data.frame(hjemmesejre$HU,HUsejre)
samlet
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H2","H1"),sep=" ")
udesejre
udesejre$HU <- paste(udesejre$H2,udesejre$H1)
udesejre
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);
udesejre
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
udesejre
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre
hjemmesejre
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
udesejre
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
udesejre
udesejre(c("H2","H1","x"))
udesejre[(c("H2","H1","x"))]
HUsejre
samlet <- c(hjemmesejre,udesejre)
samlet
hjemmesejre
udesejre
hjemmesejre <- separate(data=hjemmesejre,col=HU,into=c("H1","H2"),sep=" ")
hjemmesejre
udesejre
#bytter kolonner
udesejre <- udesejre[(c("H2","H1","x"))]
udesejre
samlet <- c(hjemmesejre,udesejre)
samlet
samlet <- c.data.frame(hjemmesejre,udesejre)
samlet <- cbind.data.frame(hjemmesejre,udesejre)
samlet
samlet <- rbind.data.frame(hjemmesejre,udesejre)
samlet
#bytter kolonner
udesejre <- udesejre[(c("H2","H1","x"))];names(udesejre) <- c("H1","H2","x")
udesejre
samlet <- rbind.data.frame(hjemmesejre,udesejre)
samlet
colnames(samlet)[1]
Y <- xtabs(samlet$HUsejre~(H1+H2),samlet)
Y <- xtabs(samlet$x~(H1+H2),samlet)
Y
#Udregner antal hjemmesejre og udesejre i kombinationerne
hjemmesejre <- aggregate(data2$Hsejr, by = list(HU=data2$HU),FUN=sum);hjemmesejre <- hjemmesejre[order(hjemmesejre$HU),]
udesejre <- aggregate(data2$Usejr, by = list(HU=data2$HU),FUN=sum);udesejre <- udesejre[order(udesejre$HU),]
#Data fix
udesejre <- separate(data=udesejre,col=HU,into=c("H1","H2"),sep=" ")
hjemmesejre <- separate(data=hjemmesejre,col=HU,into=c("H1","H2"),sep=" ")
#bytter kolonner
udesejre <- udesejre[(c("H2","H1","x"))];names(udesejre) <- c("H1","H2","x")
#udesejre$HU <- paste(udesejre$H2,udesejre$H1);udesejre <- udesejre[,4:3];#udesejre <- udesejre[order(udesejre$HU),]
#HUsejre <- c(hjemmesejre$x+udesejre$x)
samlet <- rbind.data.frame(hjemmesejre,udesejre)
#colnames(samlet)[1] <- "Hold"
#UnikSammenligner <- separate(data = as.data.frame(UnikSammenligner),col = UnikSammenligner,into = c("H1","H2"),sep = " ")
#UnikHold
#samlet <- separate(data=samlet,col=Hold,into=c("H1","H2"),sep=" ")
#tsamlet <- cbind.data.frame(samlet$H2,samlet$H1,rep(0,length(samlet[,1])))
#names(tsamlet) <- c("H1","H2","HUsejre")
#samlet <- rbind(samlet,tsamlet)
Y <- xtabs(samlet$x~(H1+H2),samlet)
Y <- as.data.frame.matrix(Y)
Y
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
x
r
Y
x
UnikHold
data1
length(data1[,1])
length(UnikHold)
data1$H
UnikHold
kamp
data1$HM[kamp] >= data1$UM[kamp]
length(data1[,1])
kamp
for (kamp in 1:length(data1[,1])) {
if (data1$H[kamp] == UnikHold[hold]) {
if (data1$HM[kamp] >= data1$UM[kamp]){
StreakSum = StreakSum + 1
} else {
StreakSum = 0
}
} else if (data1$U[kamp] == UnikHold[hold]) {
if (data1$HM[kamp] <= data1$UM[kamp]){
StreakSum = StreakSum + 1
} else {
StreakSum = 0
}
}
}
StreakSum
kamp
for (kamp in 1:length(data1[,1])) {
if (data1$H[kamp] == UnikHold[hold]) {
if (data1$HM[kamp] >= data1$UM[kamp]){
StreakSum = StreakSum + 1
} else {
StreakSum = 0
}
} else if (data1$U[kamp] == UnikHold[hold]) {
if (data1$HM[kamp] <= data1$UM[kamp]){
StreakSum = StreakSum + 1
} else {
StreakSum = 0
}
}
}
kamp
hold
data1$H[kamp] == UnikHold[hold]
data1$U[kamp] == UnikHold[hold]
x
Y
r
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",1,TRUE)
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",3,TRUE)
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",4,TRUE)
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",5,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
x
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",1,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
x
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
x
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
f <- BTFunktioner(x=x)
BTFunktioner <- function(beta,theta,x,Y,r) {
logl <- function(beta,theta,x){
sum=0;
for (i in 1:(dim(x)[2]-1)){
for (j in (i+1):(dim(x)[2])){
sum = sum +Y[i,j]*(t(x[,i])%*%beta-log(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))+
Y[j,i]*(t(x[,j])%*%beta-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))+
(r[i,j]-Y[i,j]-Y[j,i])*(log(theta^2-1)+t(x[,i])%*%beta+t(x[,j])%*%beta-log(exp(t(x[,i])%*%beta)+
theta*exp(t(x[,j])%*%beta))-log(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
}
}
return(sum)
}
db <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[2]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + (c(r[i,j]-Y[i,j])*(-(theta*exp(t(x[,i])%*%beta))/(exp(t(x[,j])%*%beta)+theta*exp(t(x[,i])%*%beta)))
+c(r[i,j]-Y[j,i])*((theta*exp(t(x[,j])%*%beta))/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta)))
)*(x[,i]-x[,j])
}
}
return(sum)
}
dtheta <- function(beta,theta,x) {
sum = 0;
for(i in 1:(dim(x)[2]-1)) {
for(j in (i+1):dim(x)[2]) {
sum = sum + ((r[i,j]-Y[i,j]-Y[j,i])*(2*theta/(theta^2-1))
+ (r[i,j]-Y[i,j])*(-(exp(t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))))
+ (r[i,j]-Y[j,i])*(-(exp(t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))))
)
}
}
return(sum)
}
dtheta2 <- function(beta,theta,x) {
sum = 0;
for(i in 1:(dim(x)[2]-1)) {
for(j in (i+1):dim(x)[2]) {
sum = sum + ((r[i,j]-Y[i,j]-Y[j,i])*(-(2*(theta^2+1))/(theta^2-1)^2)
+(r[i,j]-Y[i,j])*(exp(2*t(x[,i])%*%beta)/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))^2)
+(r[i,j]-Y[j,i])*(exp(2*t(x[,j])%*%beta)/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))^2)
)
}
}
return(sum)
}
db2 <- function(beta,theta,x){
sum = 0;
for(i in 1:(dim(x)[2]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + (as.numeric((((-(r[i,j]-Y[i,j])/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))^2)
-(r[i,j]-Y[j,i])/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))^2))
*(exp(t(x[,i])%*%beta+t(x[,j])%*%beta)*theta))*((x[,i]-x[,j])%*%t(x[,i]-x[,j]))
)
}
}
return(sum)
}
dbt <- function(beta,theta,x){
sum=0;
for(i in 1:(dim(x)[2]-1)){
for(j in (i+1):dim(x)[2]) {
sum = sum + ((as.numeric((-(r[i,j]-Y[i,j])/(theta*exp(t(x[,i])%*%beta)+exp(t(x[,j])%*%beta))^2)+
((r[i,j]-Y[j,i])/(exp(t(x[,i])%*%beta)+theta*exp(t(x[,j])%*%beta))^2))*
(exp(t(x[,i])%*%beta+t(x[,j])%*%beta))*(x[,i]-x[,j]))
)
}
}
return(sum)
}
Funktions <- list("loglike" = logl,"dlbeta" = db,"dltheta" = dtheta,"dl2xtheta" = dtheta2,"dl2xbeta"= db2,"dlbetatheta" = dbt)
return(Funktions)
}
UnikHold
length(UnikHold)
HjemmeBane <- c(rep(0,length(UnikHold)))
HjemmeBane
length(data2$H)
j
data2$H[1]
UnikHold[1]
for (i in 1:length(UnikHold)) {
for (j in 1:length(data2$H)) {
if (data2$H[j] == UnikHold[j]) {
HjemmeBane[j] = 1;
} else {
HjemmeBane[j] = 0;
}
}
}
HjemmeBane
UnikHold
for (i in 1:length(UnikHold)) {
for (j in 1:length(data2$H)) {
if (data2$H[j] == UnikHold[i]) {
HjemmeBane[j] = 1;
} else {
HjemmeBane[j] = 0;
}
}
}
HjemmeBane
for (i in 1:length(UnikHold)) {
for (j in 1:length(data2$H)) {
if (data2$H[j] == UnikHold[i]) {
HjemmeBane[i] = 1;
} else {
HjemmeBane[i] = 0;
}
}
}
HjemmeBane
data2$H
UnikHold
data2$H[1]
HjemmeBane <- c(rep(0,length(UnikHold)))
for (i in 1:length(UnikHold)) {
for (j in 1:length(data2$H)) {
if (data2$H[j] == UnikHold[i]) {
HjemmeBane[i] = 1;
} else {
HjemmeBane[i] = 0;
}
}
}
HjemmeBane
HjemmeBane <- c(rep(0,length(UnikHold)))
for (i in 1:length(UnikHold)) {
for (j in 1:length(data2$H)) {
if (data2$H[j] == UnikHold[i]) {
HjemmeBane[i] = 1;
} else {
#          HjemmeBane[i] = 0;
}
}
}
HjemmeBane
UnikHold
for (Kamp in 1:length(data2$H)) {
if (data2$H[Kamp] == UnikHold[Hold]) {
HjemmeBane[Hold] = 1;
}
}
for (hold in 1:length(UnikHold)) {
for (kamp in 1:length(data2$H)) {
if (data2$H[kamp] == UnikHold[hold]) {
HjemmeBane[hold] = 1;
}
}
}
HjemmeBane
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",2,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
f <- BTFunktioner(x=x)
n <- NR(x,f)
r
n <- NR(x,f)
f <- BTFunktioner(x=x,Y=Y,r=r)
n <- NR(x,f)
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",4,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
f <- BTFunktioner(x=x,Y=Y,r=r)
n <- NR(x,f)
beta = c(rep(0,length(x[,1])))
theta=1.01
f$dlbeta(beta,theta,x)
f$dltheta(beta,theta,x)
f$dl2xtheta(beta,theta,x)
f$dl2xbeta(beta,theta,x)
f$dlbetatheta(beta,theta,x)
a12 = as.matrix(f$dlbeta(beta,theta,x));
a12
grad = rbind(a12,f$dltheta(beta,theta,x));
grad
A = f$dl2xbeta(beta,theta,x);B = as.matrix(f$dlbetatheta(beta,theta,x));C = t(as.matrix(f$dlbetatheta(beta,theta,x)));D = f$dl2xtheta(beta,theta,x);
A
inf = cbind(A,B);inf = rbind(inf,c(C,D));inf=-inf;
inf
grad*StepHalv
StepHalv = 1/2;
grad*StepHalv
grad
inf
Inverse(inf)
inf
inf*10
inf/10
Inverse(inf/10)
Inverse(inf*10)
min(inf)
inf/min(inf)
Inverse(inf/min(inf))
Inverse(inf/max(inf))
det(inf)
det(inf*10)
det(inf*1000)
det(inf*100000)
det(inf*10000000)
det(inf*100000)
det(inf*1000000)
Inverse(inf*1000000)
inf = inf*1000000
Inverse(inf)
det(inf*1000000)
det(inf*100000)
inf = inf/1000000
det(inf*100000)
inf
solve(inf)
-D
-A
-B%*%D^(-1)%*%C
-A < -B%*%D^(-1)%*%C
library(MASS)
chol2inv(chol(inf))
chol(inf)
inf
chol2inv(inf)
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",4,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
f <- BTFunktioner(x=x,Y=Y,r=r)
n <- NR(x,f)
library(BTSoccer)
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",4,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
f <- BTFunktioner(x=x,Y=Y,r=r)
n <- NR(x,f)
inf
chol2inv(inf)
chol2inv(inf)%*%grad
library(BTSoccer)
#Henter og verificerer data
data <- read.table("Kampe_r1.csv",header=T,sep=",")
data$H <- as.character(data$H)
data$U <- as.character(data$U)
data$dato <- as.Date(data$dato, format = "%m/%d/%Y")
m <- CreateMatrixes(data,"2015-07-17","2016-05-29",4,TRUE)
x <- m$DesignMatrix;Y <- m$KontingensTabel; r <- m$SamledeKampe;
f <- BTFunktioner(x=x,Y=Y,r=r)
n <- NR(x,f)
